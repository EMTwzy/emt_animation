{
  "ast": null,
  "code": "import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_id = _resolveComponent(\"id\");\n  return _openBlock(), _createBlock(_component_id, {\n    class: \"app snowfall\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_router_view)]),\n    _: 1 /* STABLE */\n  });\n}",
  "map": {
    "version": 3,
    "names": [
      "_createBlock",
      "_component_id",
      "class",
      "_createVNode",
      "_component_router_view"
    ],
    "sources": [
      "E:\\emt_animation\\src\\App.vue"
    ],
    "sourcesContent": [
      "<template>\n  <id class=\"app snowfall\">\n    <router-view></router-view>\n\n  </id>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  components: {},\n  setup() {\n\n    // 定义全局rem\n    //屏幕宽1536px\n    document.querySelector(\"html\").style.fontSize = document.documentElement.clientWidth / 96 + 'px';\n    // 创建雪花元素\n    function createSnowflake() {\n      const snowflake = document.createElement('div');\n      snowflake.className = 'snowflake';\n      document.querySelector('.snowfall').appendChild(snowflake);\n    }\n\n    // 在页面加载时创建多个雪花\n    document.addEventListener('DOMContentLoaded', function () {\n      for (let i = 0; i < 50; i++) { // 调整雪花数量\n        createSnowflake();\n      }\n    });\n    return{\n      createSnowflake\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\nbody {\n  margin: 0;\n  overflow: hidden;\n  /* 隐藏页面溢出部分 */\n}\n\n.snowfall {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  /* 防止雪花干扰页面交互 */\n  background-image: url('../src/assets/sonw.jpg');\n  /* 替换成雪花图片的路径 */\n  animation: snowfall 10s linear infinite;\n  /* 调整动画持续时间和速度 */\n}\n\n@keyframes snowfall {\n  from {\n    transform: translateY(0);\n  }\n\n  to {\n    transform: translateY(100vh);\n    /* 雪花下落的距离，可根据需要调整 */\n  }\n}</style>\n"
    ],
    "mappings": ";;;;uBACEA,YAAA,CAGKC,aAAA;IAHDC,KAAK,EAAC;EAAc;sBACtB,MAA2B,CAA3BC,YAAA,CAA2BC,sBAAA,E"
  },
  "metadata": {},
  "sourceType": "module",
  "externalDependencies": []
}